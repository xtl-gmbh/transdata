; mFund TransData
; Copyright (C) 2020 XTL Kommunikationssysteme GmbH <info@xtl-gmbh.de>

; This program is free software: you can redistribute it and/or modify
; it under the terms of the GNU General Public License as published by
; the Free Software Foundation, either version 3 of the License, or
; (at your option) any later version.

; This program is distributed in the hope that it will be useful,
; but WITHOUT ANY WARRANTY; without even the implied warranty of
; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
; GNU General Public License for more details.

; You should have received a copy of the GNU General Public License
; along with this program.  If not, see <https://www.gnu.org/licenses/>.

; Additional values defined in osrmlearning/__init__.py !


[osrm]
host = 127.0.0.1
port = 5000
profile = car
region = europe/germany/bayern-baden-wuerttemberg
;region = europe/germany/


[osm]
tags_file = data/osm/osm_tags.yaml
highway_tags_whitelist_file = data/config/highway_tags_whitelist.txt
separator = =
escaped_separator = _EQ_


;; order-sensitive, do not re-order
[postgres]
user = postgres
password = xxxxxxxxxxxxxxxxxxxxxx
host = 127.0.0.1
port = 5432
db = bayern_baden_wuerttemberg


[tensorflow]
; 0=False 1=True
;enabled = 0
enabled = 1
;limit_scaling_factors = 0
limit_scaling_factors = 1
max_scaling_factor = 2.0
batch_size = 64
;batch_size = 100
;hidden_units = 8,
;hidden_units = 12,6
hidden_units = 15,10
; 0=False 1=True
;cross_validation = 0
cross_validation = 1
train_eval_ratio = 0.8
repetitions = 1
min_steps = 500
; 0=False 1=True
binary_tags = 0
;binary_tags = 1


;; max_travel_time: for 200 meter
[routes]
;max_count = 100000
;max_count = 3000
max_count = 300
;outlier_tolerance = 3.2
outlier_tolerance = 2
;min_travel_time = 120
;min_travel_time = 60
min_travel_time = 0
max_travel_time = 60
;max_travel_time = 180
;max_travel_time = 3600
min_travel_time_for_direct_scaling = 0
max_travel_time_for_direct_scaling = 60

train_source = COURIER_LOCATIONS
;train_source = EXECUTED_PLANS
;train_source = PLANS
;train_source = HERE_DB_PLANS
;train_source = HERE_DB_ALL

eval_source = COURIER_LOCATIONS
;eval_source = EXECUTED_PLANS
;eval_source = PLANS
;eval_source = HERE_DB_PLANS
;eval_source = HERE_DB_ALL

;; scenario_ids: the ids of the scenarios whose executed plans are to be used ('0,' to use all)
scenario_ids = 0,
;scenario_ids = 167,
;scenario_ids = 1,2,3,
;scenario_ids = 67,68,69,70,71,72,


;; courier_locations: recorded by app, provided by server
;; timestamp: exclude any entries older than this
;; step: multiply 200 meter interval
[courier_locations]
timestamp = 2018-01-01T00:00:00.00Z
step = 8


[evaluation]
log_limit = 500


[plot]
resolution = 20


[here]
file = data/here_databases/here.db
rw_file = data/here_databases/here.db
mode = fastest;car;traffic:disabled
app_id = XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
app_code = XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX


[server]
date_format = %%Y-%%m-%%dT%%H:%%M:%%S.%%fZ
; 0=False 1=True
;cache = 0
cache = 1

;protocol = http
;host = localhost
;port = 3000
;apikey = XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX


[rest_api]
;protocol = http
;host = 127.0.0.1
host = 0.0.0.0
port = 4999
date_format = %%Y-%%m-%%dT%%H:%%M:%%S.%%fZ


;; time_windows: one osrm docker for each time window
;; first_window: start hour of the first window
;; last_window: end hour of the last window
;; window_step: hour length of each window
;; number of windows = (last_window - first_window) / window_step
;; first_port: incremented for each new window
;; keep_default: if 1 then the default time window uses a non-scaled osrm instance
[time_windows]

; 0=False 1=True
;keep_default = 0
keep_default = 1

first_port = 5000

;first_window = 7
;last_window = 19

;; 12 windows:
;window_step = 1

;; 6 windows:
;window_step = 2

;; 4 windows:
;window_step = 3

;; 3 windows:
;window_step = 4

;; 2 windows:
;window_step = 6

;;; no time windows:
;first_window = 0
;last_window = 24
;window_step = 24

; 1 "good" time window
first_window = 9
last_window = 12
window_step = 3

;; 6 windows:
;window_step = 1
;first_window = 6
;last_window = 12


;; when to re-run learning
[schedule]
sleep_interval_minutes = 1
; weekday 0-6
weekday = 6
time = 00:00


;; formatting of progress bar
[progress]
suffix = %%(index)d/%%(max)d | %%(percent)d%%%% | %%(elapsed)d s


[docker]
;network = xtl-osrm-network
host = 172.17.0.1
;; min seconds to wait for container to start/stop
wait = 3
;; max seconds to wait for container to start/stop
timeout = 10
registry = registry.xtl-gmbh.de/
;registry = ""
